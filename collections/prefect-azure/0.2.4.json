{
  "block_types": {
    "azure-blob-storage-credentials": {
      "name": "Azure Blob Storage Credentials",
      "slug": "azure-blob-storage-credentials",
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/6AiQ6HRIft8TspZH7AfyZg/39fd82bdbb186db85560f688746c8cdd/azure.png?h=250",
      "documentation_url": "https://prefecthq.github.io/prefect-azure/credentials/#prefect_azure.credentials.AzureBlobStorageCredentials",
      "description": "Block used to manage Blob Storage authentication with Azure.\nAzure authentication is handled via the `azure` module through\na connection string.",
      "code_example": "Load stored Azure Blob Storage credentials:\n```python\nfrom prefect_azure import AzureBlobStorageCredentials\nazure_credentials_block = AzureBlobStorageCredentials.load(\"BLOCK_NAME\")\n```",
      "block_schema": {
        "checksum": "sha256:9bf39d40868a19b338176231b83556e7273373293fa16862a970014525001242",
        "fields": {
          "title": "AzureBlobStorageCredentials",
          "description": "Block used to manage Blob Storage authentication with Azure.\nAzure authentication is handled via the `azure` module through\na connection string.",
          "type": "object",
          "properties": {
            "connection_string": {
              "title": "Connection String",
              "description": "If account_url is not provided, the connection string to authenticate.",
              "type": "string",
              "writeOnly": true,
              "format": "password"
            },
            "account_url": {
              "title": "Account Url",
              "description": "If a connection string is not provided, the URL to the Blob Storage account; will use DefaultAzureCredential to authenticate.",
              "type": "string"
            }
          },
          "block_type_slug": "azure-blob-storage-credentials",
          "secret_fields": [
            "connection_string"
          ],
          "block_schema_references": {}
        },
        "capabilities": [],
        "version": "0.2.4"
      }
    },
    "azure-container-instance-credentials": {
      "name": "Azure Container Instance Credentials",
      "slug": "azure-container-instance-credentials",
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/6AiQ6HRIft8TspZH7AfyZg/39fd82bdbb186db85560f688746c8cdd/azure.png?h=250",
      "documentation_url": "https://prefecthq.github.io/prefect-azure/credentials/#prefect_azure.credentials.AzureContainerInstanceCredentials",
      "description": "Block used to manage Azure Container Instances authentication. Stores Azure Service\nPrincipal authentication data.",
      "code_example": "```python\nfrom prefect_azure.credentials import AzureContainerInstanceCredentials\n\nazure_container_instance_credentials_block = AzureContainerInstanceCredentials.load(\"BLOCK_NAME\")\n```",
      "block_schema": {
        "checksum": "sha256:17a9122f9f345a4547128cc05f7ff7146da9a72c4bac2850004fcc6c8d9be2d1",
        "fields": {
          "title": "AzureContainerInstanceCredentials",
          "description": "Block used to manage Azure Container Instances authentication. Stores Azure Service\nPrincipal authentication data.",
          "type": "object",
          "properties": {
            "client_id": {
              "title": "Client ID",
              "description": "The service principal client ID. If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
              "type": "string"
            },
            "tenant_id": {
              "title": "Tenant ID",
              "description": "The service principal tenant ID.If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
              "type": "string"
            },
            "client_secret": {
              "title": "Client Secret",
              "description": "The service principal client secret.If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
              "type": "string",
              "writeOnly": true,
              "format": "password"
            },
            "credential_kwargs": {
              "title": "Additional Credential Keyword Arguments",
              "description": "Additional keyword arguments to pass to `ClientSecretCredential` or `DefaultAzureCredential`.",
              "type": "object"
            }
          },
          "block_type_slug": "azure-container-instance-credentials",
          "secret_fields": [
            "client_secret"
          ],
          "block_schema_references": {}
        },
        "capabilities": [],
        "version": "0.2.4"
      }
    },
    "azure-container-instance-job": {
      "name": "Azure Container Instance Job",
      "slug": "azure-container-instance-job",
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/6AiQ6HRIft8TspZH7AfyZg/39fd82bdbb186db85560f688746c8cdd/azure.png?h=250",
      "documentation_url": "https://prefecthq.github.io/prefect-azure/container_instance/#prefect_azure.container_instance.AzureContainerInstanceJob",
      "description": "Run tasks using Azure Container Instances. Note this block is experimental. The interface may change without notice.",
      "code_example": "```python\nfrom prefect_azure.container_instance import AzureContainerInstanceJob\n\nazure_container_instance_job_block = AzureContainerInstanceJob.load(\"BLOCK_NAME\")\n```",
      "block_schema": {
        "checksum": "sha256:d34fc49003f14c302ab5c10d9cda276bfd5571a32ca777fb641fff0dc199271b",
        "fields": {
          "title": "AzureContainerInstanceJob",
          "description": "Run tasks using Azure Container Instances. Note this block is experimental. The interface may change without notice.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Type",
              "description": "The slug for this task type.",
              "default": "container-instance-job",
              "enum": [
                "container-instance-job"
              ],
              "type": "string"
            },
            "env": {
              "title": "Environment Variables",
              "description": "Environment variables to provide to the task run. These variables are set on the Prefect container at task runtime. These will not be set on the task definition.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "title": "Labels",
              "description": "Labels applied to the infrastructure for metadata purposes.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "name": {
              "title": "Name",
              "description": "Name applied to the infrastructure for identification.",
              "type": "string"
            },
            "command": {
              "title": "Command",
              "description": "The command to run in the infrastructure.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aci_credentials": {
              "title": "Aci Credentials",
              "description": "Credentials for Azure Container Instances; if not provided will attempt to use DefaultAzureCredentials.",
              "allOf": [
                {
                  "$ref": "#/definitions/AzureContainerInstanceCredentials"
                }
              ]
            },
            "resource_group_name": {
              "title": "Azure Resource Group Name",
              "description": "The name of the Azure Resource Group in which to run Prefect ACI tasks.",
              "type": "string"
            },
            "subscription_id": {
              "title": "Azure Subscription ID",
              "description": "The ID of the Azure subscription to create containers under.",
              "type": "string",
              "writeOnly": true,
              "format": "password"
            },
            "identities": {
              "title": "Identities",
              "description": "A list of user-assigned identities to associate with the container group. The identities should be an ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "image": {
              "title": "Image",
              "description": "The image to use for the Prefect container in the task. This value defaults to a Prefect base image matching your local versions.",
              "type": "string"
            },
            "entrypoint": {
              "title": "Entrypoint",
              "description": "The entrypoint of the container you wish you run. This value defaults to the entrypoint used by Prefect images and should only be changed when using a custom image that is not based on an official Prefect image. Any commands set on deployments will be passed to the entrypoint as parameters.",
              "default": "/opt/prefect/entrypoint.sh",
              "type": "string"
            },
            "image_registry": {
              "$ref": "#/definitions/DockerRegistry"
            },
            "cpu": {
              "title": "CPU",
              "description": "The number of virtual CPUs to assign to the task container. If not provided, a default value of 1.0 will be used.",
              "default": 1.0,
              "type": "number"
            },
            "gpu_count": {
              "title": "GPU Count",
              "description": "The number of GPUs to assign to the task container. If not provided, no GPU will be used.",
              "type": "integer"
            },
            "gpu_sku": {
              "title": "GPU SKU",
              "description": "The Azure GPU SKU to use. See the ACI documentation for a list of GPU SKUs available in each Azure region.",
              "type": "string"
            },
            "memory": {
              "title": "Memory",
              "description": "The amount of memory in gigabytes to provide to the ACI task. Valid amounts are specified in the Azure documentation. If not provided, a default value of  1.0 will be used unless present on the task definition.",
              "default": 1.0,
              "type": "number"
            },
            "subnet_ids": {
              "title": "Subnet IDs",
              "description": "A list of Azure subnet IDs the container should be connected to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dns_servers": {
              "title": "DNS Servers",
              "description": "A list of custom DNS Servers the container should use.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stream_output": {
              "title": "Stream Output",
              "description": "If `True`, logs will be streamed from the Prefect container to the local console.",
              "type": "boolean"
            },
            "task_start_timeout_seconds": {
              "title": "Task Start Timeout Seconds",
              "description": "The amount of time to watch for the start of the ACI container. before marking it as failed.",
              "default": 240,
              "type": "integer"
            },
            "task_watch_poll_interval": {
              "title": "Task Watch Poll Interval",
              "description": "The number of seconds to wait between Azure API calls while monitoring the state of an Azure Container Instances task.",
              "default": 5.0,
              "type": "number"
            }
          },
          "required": [
            "resource_group_name",
            "subscription_id"
          ],
          "block_type_slug": "azure-container-instance-job",
          "secret_fields": [
            "aci_credentials.client_secret",
            "subscription_id",
            "image_registry.password"
          ],
          "block_schema_references": {
            "aci_credentials": {
              "block_type_slug": "azure-container-instance-credentials",
              "block_schema_checksum": "sha256:17a9122f9f345a4547128cc05f7ff7146da9a72c4bac2850004fcc6c8d9be2d1"
            },
            "image_registry": {
              "block_type_slug": "docker-registry",
              "block_schema_checksum": "sha256:6db1457676eee0b54ca2834b06f80a80f7c90112e64f1bdd26afb2e62fcceed9"
            }
          },
          "definitions": {
            "AzureContainerInstanceCredentials": {
              "title": "AzureContainerInstanceCredentials",
              "description": "Block used to manage Azure Container Instances authentication. Stores Azure Service\nPrincipal authentication data.",
              "type": "object",
              "properties": {
                "client_id": {
                  "title": "Client ID",
                  "description": "The service principal client ID. If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
                  "type": "string"
                },
                "tenant_id": {
                  "title": "Tenant ID",
                  "description": "The service principal tenant ID.If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
                  "type": "string"
                },
                "client_secret": {
                  "title": "Client Secret",
                  "description": "The service principal client secret.If none of client_id, tenant_id, and client_secret are provided, will use DefaultAzureCredential; else will need to provide all three to use ClientSecretCredential.",
                  "type": "string",
                  "writeOnly": true,
                  "format": "password"
                },
                "credential_kwargs": {
                  "title": "Additional Credential Keyword Arguments",
                  "description": "Additional keyword arguments to pass to `ClientSecretCredential` or `DefaultAzureCredential`.",
                  "type": "object"
                }
              },
              "block_type_slug": "azure-container-instance-credentials",
              "secret_fields": [
                "client_secret"
              ],
              "block_schema_references": {}
            },
            "DockerRegistry": {
              "title": "DockerRegistry",
              "description": "Connects to a Docker registry.\n\nRequires a Docker Engine to be connectable.",
              "type": "object",
              "properties": {
                "username": {
                  "title": "Username",
                  "description": "The username to log into the registry with.",
                  "type": "string"
                },
                "password": {
                  "title": "Password",
                  "description": "The password to log into the registry with.",
                  "type": "string",
                  "writeOnly": true,
                  "format": "password"
                },
                "registry_url": {
                  "title": "Registry Url",
                  "description": "The URL to the registry. Generally, \"http\" or \"https\" can be omitted.",
                  "type": "string"
                },
                "reauth": {
                  "title": "Reauth",
                  "description": "Whether or not to reauthenticate on each interaction.",
                  "default": true,
                  "type": "boolean"
                }
              },
              "required": [
                "username",
                "password",
                "registry_url"
              ],
              "block_type_slug": "docker-registry",
              "secret_fields": [
                "password"
              ],
              "block_schema_references": {}
            }
          }
        },
        "capabilities": [
          "run-infrastructure"
        ],
        "version": "0.2.4"
      }
    },
    "azure-cosmos-db-credentials": {
      "name": "Azure Cosmos DB Credentials",
      "slug": "azure-cosmos-db-credentials",
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/6AiQ6HRIft8TspZH7AfyZg/39fd82bdbb186db85560f688746c8cdd/azure.png?h=250",
      "documentation_url": "https://prefecthq.github.io/prefect-azure/credentials/#prefect_azure.credentials.AzureCosmosDbCredentials",
      "description": "Block used to manage Cosmos DB authentication with Azure.\nAzure authentication is handled via the `azure` module through\na connection string.",
      "code_example": "Load stored Azure Cosmos DB credentials:\n```python\nfrom prefect_azure import AzureCosmosDbCredentials\nazure_credentials_block = AzureCosmosDbCredentials.load(\"BLOCK_NAME\")\n```",
      "block_schema": {
        "checksum": "sha256:2f9f6e6f6c2eb570a05113638e6237fe74f7684993a351018657211d4705a83a",
        "fields": {
          "title": "AzureCosmosDbCredentials",
          "description": "Block used to manage Cosmos DB authentication with Azure.\nAzure authentication is handled via the `azure` module through\na connection string.",
          "type": "object",
          "properties": {
            "connection_string": {
              "title": "Connection String",
              "description": "Includes the authorization information required.",
              "type": "string",
              "writeOnly": true,
              "format": "password"
            }
          },
          "required": [
            "connection_string"
          ],
          "block_type_slug": "azure-cosmos-db-credentials",
          "secret_fields": [
            "connection_string"
          ],
          "block_schema_references": {}
        },
        "capabilities": [],
        "version": "0.2.4"
      }
    },
    "azureml-credentials": {
      "name": "AzureML Credentials",
      "slug": "azureml-credentials",
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/6AiQ6HRIft8TspZH7AfyZg/39fd82bdbb186db85560f688746c8cdd/azure.png?h=250",
      "documentation_url": "https://prefecthq.github.io/prefect-azure/credentials/#prefect_azure.credentials.AzureMlCredentials",
      "description": "Block used to manage authentication with AzureML. Azure authentication is\nhandled via the `azure` module.",
      "code_example": "Load stored AzureML credentials:\n```python\nfrom prefect_azure import AzureMlCredentials\nazure_ml_credentials_block = AzureMlCredentials.load(\"BLOCK_NAME\")\n```",
      "block_schema": {
        "checksum": "sha256:7ade832cf475fd1ea5d88faf0003fad80abc9049bcc2bd5fed52476ffc800c79",
        "fields": {
          "title": "AzureMlCredentials",
          "description": "Block used to manage authentication with AzureML. Azure authentication is\nhandled via the `azure` module.",
          "type": "object",
          "properties": {
            "tenant_id": {
              "title": "Tenant Id",
              "description": "The active directory tenant that the service identity belongs to.",
              "type": "string"
            },
            "service_principal_id": {
              "title": "Service Principal Id",
              "description": "The service principal ID.",
              "type": "string"
            },
            "service_principal_password": {
              "title": "Service Principal Password",
              "description": "The service principal password/key.",
              "type": "string",
              "writeOnly": true,
              "format": "password"
            },
            "subscription_id": {
              "title": "Subscription Id",
              "description": "The Azure subscription ID containing the workspace.",
              "type": "string"
            },
            "resource_group": {
              "title": "Resource Group",
              "description": "The resource group containing the workspace.",
              "type": "string"
            },
            "workspace_name": {
              "title": "Workspace Name",
              "description": "The existing workspace name.",
              "type": "string"
            }
          },
          "required": [
            "tenant_id",
            "service_principal_id",
            "service_principal_password",
            "subscription_id",
            "resource_group",
            "workspace_name"
          ],
          "block_type_slug": "azureml-credentials",
          "secret_fields": [
            "service_principal_password"
          ],
          "block_schema_references": {}
        },
        "capabilities": [],
        "version": "0.2.4"
      }
    }
  }
}
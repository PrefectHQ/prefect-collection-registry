{
  "prefect-docker": {
    "docker": {
      "default_base_job_configuration": {
        "job_configuration": {
          "command": "{{ command }}",
          "env": "{{ env }}",
          "labels": "{{ labels }}",
          "name": "{{ name }}",
          "image": "{{ image }}",
          "registry_credentials": "{{ registry_credentials }}",
          "image_pull_policy": "{{ image_pull_policy }}",
          "networks": "{{ networks }}",
          "network_mode": "{{ network_mode }}",
          "auto_remove": "{{ auto_remove }}",
          "volumes": "{{ volumes }}",
          "stream_output": "{{ stream_output }}",
          "mem_limit": "{{ mem_limit }}",
          "memswap_limit": "{{ memswap_limit }}",
          "privileged": "{{ privileged }}",
          "container_create_kwargs": "{{ container_create_kwargs }}"
        },
        "variables": {
          "$defs": {
            "DockerRegistryCredentials": {
              "additionalProperties": true,
              "block_schema_references": {},
              "block_type_slug": "docker-registry-credentials",
              "description": "Store credentials for interacting with a Docker Registry.",
              "properties": {
                "username": {
                  "description": "The username to log into the registry with.",
                  "title": "Username",
                  "type": "string"
                },
                "password": {
                  "description": "The password to log into the registry with.",
                  "format": "password",
                  "title": "Password",
                  "type": "string",
                  "writeOnly": true
                },
                "registry_url": {
                  "description": "The URL to the registry. Generally, \"http\" or \"https\" can be omitted.",
                  "examples": [
                    "index.docker.io"
                  ],
                  "title": "Registry Url",
                  "type": "string"
                },
                "reauth": {
                  "default": true,
                  "description": "Whether or not to reauthenticate on each interaction.",
                  "title": "Reauth",
                  "type": "boolean"
                }
              },
              "required": [
                "username",
                "password",
                "registry_url"
              ],
              "secret_fields": [
                "password"
              ],
              "title": "DockerRegistryCredentials",
              "type": "object"
            }
          },
          "description": "Configuration class used by the Docker worker.\n\nAn instance of this class is passed to the Docker worker's `run` method\nfor each flow run. It contains all the information necessary to execute the\nflow run as a Docker container.\n\nAttributes:\n    name: The name to give to created Docker containers.\n    command: The command executed in created Docker containers to kick off\n        flow run execution.\n    env: The environment variables to set in created Docker containers.\n    labels: The labels to set on created Docker containers.\n    image: The image reference of a container image to use for created jobs.\n        If not set, the latest Prefect image will be used.\n    image_pull_policy: The image pull policy to use when pulling images.\n    networks: Docker networks that created containers should be connected to.\n    network_mode: The network mode for the created containers (e.g. host, bridge).\n        If 'networks' is set, this cannot be set.\n    auto_remove: If set, containers will be deleted on completion.\n    volumes: Docker volumes that should be mounted in created containers.\n    stream_output: If set, the output from created containers will be streamed\n        to local standard output.\n    mem_limit: Memory limit of created containers. Accepts a value\n        with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is\n        given without a unit, bytes are assumed.\n    memswap_limit: Total memory (memory + swap), -1 to disable swap. Should only be\n        set if `mem_limit` is also set. If `mem_limit` is set, this defaults to\n        allowing the container to use as much swap as memory. For example, if\n        `mem_limit` is 300m and `memswap_limit` is not set, containers can use\n        600m in total of memory and swap.\n    privileged: Give extended privileges to created containers.\n    container_create_kwargs: Extra args for docker py when creating container.",
          "properties": {
            "command": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The command to use when starting a flow run. In most cases, this should be left blank and the command will be automatically generated by the worker.",
              "title": "Command"
            },
            "env": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "description": "Environment variables to set when starting a flow run.",
              "title": "Environment Variables",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels applied to infrastructure created by the worker using this job configuration.",
              "title": "Labels",
              "type": "object"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Name given to infrastructure created by the worker using this job configuration.",
              "title": "Name"
            },
            "image": {
              "description": "The image reference of a container image to use for created jobs. If not set, the latest Prefect image will be used.",
              "examples": [
                "docker.io/prefecthq/prefect:3-latest"
              ],
              "title": "Image",
              "type": "string"
            },
            "registry_credentials": {
              "anyOf": [
                {
                  "$ref": "#/$defs/DockerRegistryCredentials"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Credentials for logging into a Docker registry to pull images from."
            },
            "image_pull_policy": {
              "anyOf": [
                {
                  "enum": [
                    "IfNotPresent",
                    "Always",
                    "Never"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The image pull policy to use when pulling images.",
              "title": "Image Pull Policy"
            },
            "networks": {
              "description": "Docker networks that created containers should be connected to.",
              "items": {
                "type": "string"
              },
              "title": "Networks",
              "type": "array"
            },
            "network_mode": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The network mode for the created containers (e.g. host, bridge). If 'networks' is set, this cannot be set.",
              "title": "Network Mode"
            },
            "auto_remove": {
              "default": false,
              "description": "If set, containers will be deleted on completion.",
              "title": "Auto Remove",
              "type": "boolean"
            },
            "volumes": {
              "description": "A list of volume to mount into created containers.",
              "examples": [
                "/my/local/path:/path/in/container"
              ],
              "items": {
                "type": "string"
              },
              "title": "Volumes",
              "type": "array"
            },
            "stream_output": {
              "default": true,
              "description": "If set, the output from created containers will be streamed to local standard output.",
              "title": "Stream Output",
              "type": "boolean"
            },
            "mem_limit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Memory limit of created containers. Accepts a value with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is given without a unit, bytes are assumed.",
              "title": "Memory Limit"
            },
            "memswap_limit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Total memory (memory + swap), -1 to disable swap. Should only be set if `mem_limit` is also set. If `mem_limit` is set, this defaults toallowing the container to use as much swap as memory. For example, if `mem_limit` is 300m and `memswap_limit` is not set, containers can use 600m in total of memory and swap.",
              "title": "Memory Swap Limit"
            },
            "privileged": {
              "default": false,
              "description": "Give extended privileges to created container.",
              "title": "Privileged",
              "type": "boolean"
            },
            "container_create_kwargs": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Configuration for containers created by workers. See the [`docker-py` documentation](https://docker-py.readthedocs.io/en/stable/containers.html) for accepted values.",
              "title": "Container Configuration"
            }
          },
          "type": "object"
        }
      },
      "description": "Execute flow runs within Docker containers. Works well for managing flow execution environments via Docker images. Requires access to a running Docker daemon.",
      "display_name": "Docker",
      "documentation_url": "https://prefecthq.github.io/prefect-docker/worker/",
      "install_command": "pip install prefect-docker",
      "is_beta": false,
      "logo_url": "https://images.ctfassets.net/gm98wzqotmnx/2IfXXfMq66mrzJBDFFCHTp/6d8f320d9e4fc4393f045673d61ab612/Moby-logo.png?h=250",
      "type": "docker"
    }
  }
}
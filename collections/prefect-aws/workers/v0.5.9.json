{
  "prefect-aws": {
    "ecs": {
      "default_base_job_configuration": {
        "job_configuration": {
          "command": "{{ command }}",
          "env": "{{ env }}",
          "labels": "{{ labels }}",
          "name": "{{ name }}",
          "aws_credentials": "{{ aws_credentials }}",
          "task_definition": {
            "containerDefinitions": [
              {
                "image": "{{ image }}",
                "name": "{{ container_name }}"
              }
            ],
            "cpu": "{{ cpu }}",
            "executionRoleArn": "{{ execution_role_arn }}",
            "family": "{{ family }}",
            "memory": "{{ memory }}"
          },
          "task_run_request": {
            "capacityProviderStrategy": "{{ capacity_provider_strategy }}",
            "cluster": "{{ cluster }}",
            "launchType": "{{ launch_type }}",
            "overrides": {
              "containerOverrides": [
                {
                  "command": "{{ command }}",
                  "cpu": "{{ cpu }}",
                  "environment": "{{ env }}",
                  "memory": "{{ memory }}",
                  "name": "{{ container_name }}"
                }
              ],
              "cpu": "{{ cpu }}",
              "memory": "{{ memory }}",
              "taskRoleArn": "{{ task_role_arn }}"
            },
            "tags": "{{ labels }}",
            "taskDefinition": "{{ task_definition_arn }}"
          },
          "configure_cloudwatch_logs": "{{ configure_cloudwatch_logs }}",
          "cloudwatch_logs_options": "{{ cloudwatch_logs_options }}",
          "cloudwatch_logs_prefix": "{{ cloudwatch_logs_prefix }}",
          "network_configuration": "{{ network_configuration }}",
          "stream_output": "{{ stream_output }}",
          "task_start_timeout_seconds": "{{ task_start_timeout_seconds }}",
          "task_watch_poll_interval": "{{ task_watch_poll_interval }}",
          "auto_deregister_task_definition": "{{ auto_deregister_task_definition }}",
          "vpc_id": "{{ vpc_id }}",
          "container_name": "{{ container_name }}",
          "cluster": "{{ cluster }}",
          "match_latest_revision_in_family": "{{ match_latest_revision_in_family }}",
          "execution_role_arn": "{{ execution_role_arn }}"
        },
        "variables": {
          "description": "Variables for templating an ECS job.",
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Name given to infrastructure created by a worker.",
              "title": "Name"
            },
            "env": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "description": "Environment variables to provide to the task run. These variables are set on the Prefect container at task runtime. These will not be set on the task definition.",
              "title": "Environment Variables",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels applied to infrastructure created by a worker.",
              "title": "Labels",
              "type": "object"
            },
            "command": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The command to use when starting a flow run. In most cases, this should be left blank and the command will be automatically generated by the worker.",
              "title": "Command"
            },
            "task_definition_arn": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "An identifier for an existing task definition to use. If set, options that require changes to the task definition will be ignored. All contents of the task definition in the job configuration will be ignored.",
              "title": "Task Definition Arn"
            },
            "aws_credentials": {
              "$ref": "#/definitions/AwsCredentials",
              "description": "The AWS credentials to use to connect to ECS. If not provided, credentials will be inferred from the local environment following AWS's boto client's rules.",
              "title": "AWS Credentials"
            },
            "cluster": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The ECS cluster to run the task in. An ARN or name may be provided. If not provided, the default cluster will be used.",
              "title": "Cluster"
            },
            "family": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A family for the task definition. If not provided, it will be inferred from the task definition. If the task definition does not have a family, the name will be generated. When flow and deployment metadata is available, the generated name will include their names. Values for this field will be slugified to match AWS character requirements.",
              "title": "Family"
            },
            "launch_type": {
              "default": "FARGATE",
              "description": "The type of ECS task run infrastructure that should be used. Note that 'FARGATE_SPOT' is not a formal ECS launch type, but we will configure the proper capacity provider strategy if set here.",
              "enum": [
                "FARGATE",
                "EC2",
                "EXTERNAL",
                "FARGATE_SPOT"
              ],
              "title": "Launch Type",
              "type": "string"
            },
            "capacity_provider_strategy": {
              "description": "The capacity provider strategy to use when running the task. If a capacity provider strategy is specified, the selected launch type will be ignored.",
              "items": {
                "$ref": "#/definitions/CapacityProvider"
              },
              "title": "Capacity Provider Strategy",
              "type": "array"
            },
            "image": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The image to use for the Prefect container in the task. If this value is not null, it will override the value in the task definition. This value defaults to a Prefect base image matching your local versions.",
              "title": "Image"
            },
            "cpu": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The amount of CPU to provide to the ECS task. Valid amounts are specified in the AWS documentation. If not provided, a default value of 1024 will be used unless present on the task definition.",
              "title": "CPU"
            },
            "memory": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The amount of memory to provide to the ECS task. Valid amounts are specified in the AWS documentation. If not provided, a default value of 2048 will be used unless present on the task definition.",
              "title": "Memory"
            },
            "container_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The name of the container flow run orchestration will occur in. If not specified, a default value of prefect will be used and if that is not found in the task definition the first container will be used.",
              "title": "Container Name"
            },
            "task_role_arn": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "A role to attach to the task run. This controls the permissions of the task while it is running.",
              "title": "Task Role ARN"
            },
            "execution_role_arn": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "An execution role to use for the task. This controls the permissions of the task when it is launching. If this value is not null, it will override the value in the task definition. An execution role must be provided to capture logs from the container.",
              "title": "Execution Role ARN"
            },
            "vpc_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The AWS VPC to link the task run to. This is only applicable when using the 'awsvpc' network mode for your task. FARGATE tasks require this network  mode, but for EC2 tasks the default network mode is 'bridge'. If using the 'awsvpc' network mode and this field is null, your default VPC will be used. If no default VPC can be found, the task run will fail.",
              "title": "VPC ID"
            },
            "configure_cloudwatch_logs": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "If enabled, the Prefect container will be configured to send its output to the AWS CloudWatch logs service. This functionality requires an execution role with logs:CreateLogStream, logs:CreateLogGroup, and logs:PutLogEvents permissions. The default for this field is `False` unless `stream_output` is set.",
              "title": "Configure Cloudwatch Logs"
            },
            "cloudwatch_logs_options": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "When `configure_cloudwatch_logs` is enabled, this setting may be used to pass additional options to the CloudWatch logs configuration or override the default options. See the [AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html#create_awslogs_logdriver_options) for available options. ",
              "title": "Cloudwatch Logs Options",
              "type": "object"
            },
            "cloudwatch_logs_prefix": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "When `configure_cloudwatch_logs` is enabled, this setting may be used to set a prefix for the log group. If not provided, the default prefix will be `prefect-logs_<work_pool_name>_<deployment_id>`. If `awslogs-stream-prefix` is present in `Cloudwatch logs options` this setting will be ignored.",
              "title": "Cloudwatch Logs Prefix"
            },
            "network_configuration": {
              "additionalProperties": true,
              "description": "When `network_configuration` is supplied it will override ECS Worker'sawsvpcConfiguration that defined in the ECS task executing your workload. See the [AWS documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html) for available options.",
              "title": "Network Configuration",
              "type": "object"
            },
            "stream_output": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "If enabled, logs will be streamed from the Prefect container to the local console. Unless you have configured AWS CloudWatch logs manually on your task definition, this requires the same prerequisites outlined in `configure_cloudwatch_logs`.",
              "title": "Stream Output"
            },
            "task_start_timeout_seconds": {
              "default": 300,
              "description": "The amount of time to watch for the start of the ECS task before marking it as failed. The task must enter a RUNNING state to be considered started.",
              "title": "Task Start Timeout Seconds",
              "type": "integer"
            },
            "task_watch_poll_interval": {
              "default": 5.0,
              "description": "The amount of time to wait between AWS API calls while monitoring the state of an ECS task.",
              "title": "Task Watch Poll Interval",
              "type": "number"
            },
            "auto_deregister_task_definition": {
              "default": false,
              "description": "If enabled, any task definitions that are created by this block will be deregistered. Existing task definitions linked by ARN will never be deregistered. Deregistering a task definition does not remove it from your AWS account, instead it will be marked as INACTIVE.",
              "title": "Auto Deregister Task Definition",
              "type": "boolean"
            },
            "match_latest_revision_in_family": {
              "default": false,
              "description": "If enabled, the most recent active revision in the task definition family will be compared against the desired ECS task configuration. If they are equal, the existing task definition will be used instead of registering a new one. If no family is specified the default family \"prefect\" will be used.",
              "title": "Match Latest Revision In Family",
              "type": "boolean"
            }
          },
          "type": "object",
          "definitions": {
            "AwsClientParameters": {
              "description": "Model used to manage extra parameters that you can pass when you initialize\nthe Client. If you want to find more information, see\n[boto3 docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/core/session.html)\nfor more info about the possible client configurations.\n\nAttributes:\n    api_version: The API version to use. By default, botocore will\n        use the latest API version when creating a client. You only need\n        to specify this parameter if you want to use a previous API version\n        of the client.\n    use_ssl: Whether or not to use SSL. By default, SSL is used.\n        Note that not all services support non-ssl connections.\n    verify: Whether or not to verify SSL certificates. By default\n        SSL certificates are verified. If False, SSL will still be used\n        (unless use_ssl is False), but SSL certificates\n        will not be verified. Passing a file path to this is deprecated.\n    verify_cert_path: A filename of the CA cert bundle to\n        use. You can specify this argument if you want to use a\n        different CA cert bundle than the one used by botocore.\n    endpoint_url: The complete URL to use for the constructed\n        client. Normally, botocore will automatically construct the\n        appropriate URL to use when communicating with a service. You\n        can specify a complete URL (including the \"http/https\" scheme)\n        to override this behavior. If this value is provided,\n        then ``use_ssl`` is ignored.\n    config: Advanced configuration for Botocore clients. See\n        [botocore docs](https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html)\n        for more details.",
              "properties": {
                "api_version": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The API version to use.",
                  "title": "API Version"
                },
                "use_ssl": {
                  "default": true,
                  "description": "Whether or not to use SSL.",
                  "title": "Use SSL",
                  "type": "boolean"
                },
                "verify": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "format": "file-path",
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Whether or not to verify SSL certificates.",
                  "title": "Verify"
                },
                "verify_cert_path": {
                  "anyOf": [
                    {
                      "format": "file-path",
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Path to the CA cert bundle to use.",
                  "title": "Certificate Authority Bundle File Path"
                },
                "endpoint_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The complete URL to use for the constructed client.",
                  "title": "Endpoint URL"
                },
                "config": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Advanced configuration for Botocore clients.",
                  "title": "Botocore Config"
                }
              },
              "title": "AwsClientParameters",
              "type": "object"
            },
            "AwsCredentials": {
              "block_schema_references": {},
              "block_type_slug": "aws-credentials",
              "description": "Block used to manage authentication with AWS. AWS authentication is\nhandled via the `boto3` module. Refer to the\n[boto3 docs](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html)\nfor more info about the possible credential configurations.",
              "properties": {
                "aws_access_key_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "A specific AWS access key ID.",
                  "title": "AWS Access Key ID"
                },
                "aws_secret_access_key": {
                  "anyOf": [
                    {
                      "format": "password",
                      "type": "string",
                      "writeOnly": true
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "A specific AWS secret access key.",
                  "title": "AWS Access Key Secret"
                },
                "aws_session_token": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The session key for your AWS account. This is only needed when you are using temporary credentials.",
                  "title": "AWS Session Token"
                },
                "profile_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The profile to use when creating your session.",
                  "title": "Profile Name"
                },
                "region_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The AWS Region where you want to create new connections.",
                  "title": "Region Name"
                },
                "aws_client_parameters": {
                  "$ref": "#/definitions/AwsClientParameters",
                  "description": "Extra parameters to initialize the Client.",
                  "title": "AWS Client Parameters"
                }
              },
              "secret_fields": [
                "aws_secret_access_key"
              ],
              "title": "AwsCredentials",
              "type": "object"
            },
            "CapacityProvider": {
              "description": "The capacity provider strategy to use when running the task.",
              "properties": {
                "capacityProvider": {
                  "title": "Capacityprovider",
                  "type": "string"
                },
                "weight": {
                  "title": "Weight",
                  "type": "integer"
                },
                "base": {
                  "title": "Base",
                  "type": "integer"
                }
              },
              "required": [
                "capacityProvider",
                "weight",
                "base"
              ],
              "title": "CapacityProvider",
              "type": "object"
            }
          }
        }
      },
      "description": "Execute flow runs within containers on AWS ECS. Works with EC2 and Fargate clusters. Requires an AWS account.",
      "display_name": "AWS Elastic Container Service",
      "documentation_url": "https://docs.prefect.io/integrations/prefect-aws/",
      "install_command": "pip install prefect-aws",
      "is_beta": false,
      "logo_url": "https://cdn.sanity.io/images/3ugk85nk/production/d74b16fe84ce626345adf235a47008fea2869a60-225x225.png",
      "type": "ecs"
    }
  }
}